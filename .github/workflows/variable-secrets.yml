# name: exploring variable and secrets

# on: push

# jobs: 
#   docker_build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: docker build
#       run: docker build -t docker.io/dockerUsername/imageName:latest
    
#     - name: docker login
#       run: docker login --username=dockerUsername --password=s3cUrePaSsw0rd

#     - name: docker publish
#       run: docker push docker.io/dockerUsername/imageName:latest
  
#   docker_deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: docker run 
#       run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

############ environment variables at STEP level ############ 
# name: exploring variable and secrets

# on: push

# jobs: 
#   docker_build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: docker build
#       env:
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: saikatpanja400
#         IMAGE_NAME: github-actions-nginx
#     #   run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
#       run: docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
    
#     - name: docker login
#       env: 
#         DOCKER_PASSWORD: s3cUrePaSsw0rd
#         DOCKER_USERNAME: saikatpanja400
#       run: docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#     - name: docker publish
#       env: 
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: saikatpanja400
#         IMAGE_NAME: github-actions-nginx
#       run: docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
  
#   docker_deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: docker run 
#       env: 
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: saikatpanja400
#         IMAGE_NAME: github-actions-nginx
#       run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

############ environment variables at JOB level ############ 
# name: exploring variable and secrets

# on: push

# jobs: 
#   docker_build:
#     runs-on: ubuntu-latest
#     env:
#       CONTAINER_REGISTRY: docker.io
#       DOCKER_USERNAME: saikatpanja400
#       IMAGE_NAME: github-actions-nginx
#     steps:
#     - name: docker build
#     #   run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
#       run: docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
    
#     - name: docker login
#       env: 
#         DOCKER_PASSWORD: s3cUrePaSsw0rd
#       run: docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#     - name: docker publish    
#       run: docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
  
#   docker_deploy:
#     runs-on: ubuntu-latest
#     env:
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: saikatpanja400
#         IMAGE_NAME: github-actions-nginx
#     steps:
#     - name: docker run 
#       run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

############ environment variables at workflow level ############ 
name: exploring variable and secrets

on: 
  workflow_dispatch: # adds a button to manually trigger a workflow
  # schedule:
  # - cron: "*/1 * * * *" # at every minute 
  # push

env:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME: github-actions-nginx
jobs: 
  docker_build:
    runs-on: ubuntu-latest
    steps:
    - name: docker build
    #   run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
      run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{  vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
    
    - name: docker login
      run: echo docker login --username=${{  vars.DOCKER_USERNAME }}  --password=${{ secrets.DOCKER_PASSWORD }}

    - name: docker publish    
      run: echo docker push $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
  
  docker_deploy:
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
    - name: docker run 
      run: |
        echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{  vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
        sleep 300s