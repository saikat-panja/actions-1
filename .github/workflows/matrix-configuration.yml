# name: matrix configuration

# on:
#   push:
#   workflow_dispatch: 

# jobs:
#   deploy_on_ubuntu:
#     runs-on: ubuntu-latest
#     steps:
#     - name: echo docker details
#       run: docker info
    
#     - name: run images
#       run: docker run hello-world
#   deploy_on_windows:
#     runs-on: windows-latest
#     steps:
#     - name: echo docker details
#       run: docker info
    
#     - name: run images
#       run: docker run hello-world
############ using matrix strategy ############
# name: matrix configuration

# on:
#   push:
#   workflow_dispatch: 

# jobs:
#   deploy:
#     strategy:
#       matrix:
#         # can be of any name. here taking os and images
#         # it would create 3x2 = 6 jobs all running in parallel
#         os: [ubuntu-latest, ubuntu-20.04, windows-latest]
#         images: [hello-world, alpine]
#     runs-on: ${{ matrix.os }}
#     steps:
#     - name: echo docker details
#       run: docker info
    
#     - name: run image on ${{ matrix.os }}
#       run: docker run ${{ matrix.images }}

############ additional matrix strategy ############
# exclude alpine image to be executed on windows machine
name: matrix configuration

on:
  push:
  workflow_dispatch: 

jobs:
  deploy:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        # can be of any name. here taking os and images
        # it would create (3x2)-1+1 = 6 jobs all running in parallel
        os: [ubuntu-latest, ubuntu-20.04, windows-latest]
        images: [hello-world, alpine]
        exclude:
          - images: alpine
            os: windows-latest
        include:
          - image: amd64/alpine
            os: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
    - name: echo docker details
      run: docker info
    
    - name: run image on ${{ matrix.os }}
      run: docker run ${{ matrix.images }}